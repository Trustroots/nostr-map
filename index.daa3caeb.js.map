{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BCAAC,EAAAD,EAAA,S,4BAIO,MAAME,EAAuBC,UAElC,UADyB,EAAAC,EAAAC,iBAKzB,aACU,EAAAC,EAAAC,cACN,kEAUJC,EAAAP,GAAKQ,KAAK,CACRC,KAAM,0EARAF,EAAAP,GAAKQ,KAAK,CACdC,KAAM,8DAERC,WAAWC,SAASC,KAAO,oCAM7B,E,iBDRqBV,WACrB,MAAMW,QAAmB,EAAAV,EAAAC,iBAEnBU,EAAWhB,EAAAiB,QAAUC,IAAI,YACzBC,EAAYnB,EAAAiB,QAAUC,IAAI,aAEhC,GAAIH,EAAY,CACdf,EAAAiB,QAAUG,SAASJ,EAAU,QAC7BhB,EAAAiB,QAAUG,SAASD,EAAW,QAERE,SAASC,eAAe,WAChCC,QAAUnB,gBAChB,EAAAC,EAAAmB,mBACNZ,WAAWC,SAASY,QAAM,QAGJ,EAAApB,EAAAqB,gBAAxB,MACMC,QAAsB,EAAAtB,EAAAuB,oBACtBC,QAAuB,EAAAxB,EAAAyB,qBAEPlB,WAAWS,SAASC,eAAe,iBAC3CS,UAAYJ,EAExBf,WAAWS,SAASC,eAAe,kBAClBS,UAAYF,CACjC,KAAO,CACL7B,EAAAiB,QAAUG,SAASJ,EAAU,QAC7BhB,EAAAiB,QAAUG,SAASD,EAAW,QAETE,SAASC,eAAe,UAChCC,QAAU,MACrB,EAAAS,EAAAC,sBAAkB,CAEtB,CAEA,MAAMC,EAAcb,SAASC,eAAe,UACtCa,QAAe,EAAAC,EAAAC,aACfC,EAAaC,KAAKC,UAAUL,GAClCD,EAAYO,MAAQH,EAEpB,MAAMI,EAAoBrB,SAASC,eAAe,iBAClDoB,EAAkBnB,QAAUnB,MAAOuC,IACjCA,EAAMC,iBACNF,EAAkBG,aAAa,WAAY,YAE3C,MAAMP,EAAaJ,EAAYO,MAC/B,IACE,MAAMN,EAASI,KAAKO,MAAMR,GAC1B,IAAKS,MAAMC,QAAQb,IAA6B,IAAlBA,EAAOc,OAGnC,OAFAP,EAAkBQ,gBAAgB,iBAClCtC,WAAWuC,MAAM,qDAGb,EAAAf,EAAAgB,WAAU,C,OAAEjB,IAClBvB,WAAWuC,MAAM,iBACjBvC,WAAWS,SAASR,SAASY,QAI/B,CAHE,MAAO4B,GACPX,EAAkBQ,gBAAgB,YAClCtC,WAAWuC,MAAM,gCAAgCE,EAAMC,aACzD,GAGFnD,GAAmB,EAErBoD","sources":["src/startup.ts","src/welcome.ts"],"sourcesContent":["import * as L from \"leaflet\";\nimport { getRelays, setRelays } from \"./nostr\";\nimport {\n  createPrivateKey,\n  getNpubPublicKey,\n  getNsecPrivateKey,\n  getPublicKey,\n  hasPrivateKey,\n  setPrivateKey,\n  unsetPrivateKey,\n} from \"./nostr/keys\";\nimport { setProfile, subscribeAndGetProfile } from \"./nostr/profiles\";\nimport { getTrustrootsUsernameFromLocation } from \"./router\";\nimport { startWelcomeSequence } from \"./welcome\";\nimport { startUserOnboarding } from \"./onboarding\";\n\nexport const startup = async () => {\n  const isLoggedIn = await hasPrivateKey();\n\n  const loggedIn = L.DomUtil.get(\"loggedIn\")!;\n  const loggedOut = L.DomUtil.get(\"loggedOut\")!;\n\n  if (isLoggedIn) {\n    L.DomUtil.addClass(loggedIn, \"show\");\n    L.DomUtil.addClass(loggedOut, \"hide\");\n\n    const signoutButton = document.getElementById(\"signout\")!;\n    signoutButton.onclick = async () => {\n      await unsetPrivateKey();\n      globalThis.location.reload();\n    };\n\n    const publicKey = await getPublicKey();\n    const npubPublicKey = await getNpubPublicKey();\n    const nsecPrivateKey = await getNsecPrivateKey();\n\n    const publicKeyCode = globalThis.document.getElementById(\"npubPublicKey\")!;\n    publicKeyCode.innerText = npubPublicKey;\n    const nsecPrivateKeyCode =\n      globalThis.document.getElementById(\"nsecPrivateKey\")!;\n    nsecPrivateKeyCode.innerText = nsecPrivateKey;\n  } else {\n    L.DomUtil.addClass(loggedIn, \"hide\");\n    L.DomUtil.addClass(loggedOut, \"show\");\n\n    const signupButton = document.getElementById(\"signup\")!;\n    signupButton.onclick = () => {\n      startUserOnboarding();\n    };\n  }\n\n  const relaysInput = document.getElementById(\"relays\") as HTMLInputElement;\n  const relays = await getRelays();\n  const relaysJson = JSON.stringify(relays);\n  relaysInput.value = relaysJson;\n\n  const relaySubmitButton = document.getElementById(\"relays_submit\")!;\n  relaySubmitButton.onclick = async (event) => {\n    event.preventDefault();\n    relaySubmitButton.setAttribute(\"disabled\", \"disabled\");\n\n    const relaysJson = relaysInput.value;\n    try {\n      const relays = JSON.parse(relaysJson) as string[];\n      if (!Array.isArray(relays) || relays.length === 0) {\n        relaySubmitButton.removeAttribute(\"disabled\");\n        globalThis.alert(\"Invalid relays submitted. Please try again.\");\n        return;\n      }\n      await setRelays({ relays });\n      globalThis.alert(\"Relays saved.\");\n      globalThis.document.location.reload();\n    } catch (error) {\n      relaySubmitButton.removeAttribute(\"disabled\");\n      globalThis.alert(`#vRuf1N Error saving relays\\n${error.toString()}`);\n    }\n  };\n\n  startWelcomeSequence();\n};\nstartup();\n","import Swal from \"sweetalert2\";\nimport { hasPrivateKey } from \"./nostr/keys\";\nimport { confirmYesNo } from \"./utils\";\n\nexport const startWelcomeSequence = async () => {\n  const isLoggedIn = await hasPrivateKey();\n  if (isLoggedIn) {\n    return;\n  }\n\n  if (\n    !(await confirmYesNo(\n      \"Welcome. This is experimental. Are you ready to get wild?\"\n    ))\n  ) {\n    await Swal.fire({\n      text: `Then we'll take you back to the safety of trustroots`,\n    });\n    globalThis.location.href = `http://www.trustroots.org/search`;\n    return;\n  }\n\n  Swal.fire({\n    text: `Right click if you want to add something to the map. Have fun.`,\n  });\n};\n"],"names":["$8JYDX","parcelRequire","$dcZZ4","$5671e7ef3fae0719$export$f3af3953777865d","async","$lsWS8","hasPrivateKey","$mDWTX","confirmYesNo","$parcel$interopDefault","fire","text","globalThis","location","href","isLoggedIn","loggedIn","DomUtil","get","loggedOut","addClass","document","getElementById","onclick","unsetPrivateKey","reload","getPublicKey","npubPublicKey","getNpubPublicKey","nsecPrivateKey","getNsecPrivateKey","innerText","$dgphM","startUserOnboarding","relaysInput","relays","$F1Hgz","getRelays","relaysJson","JSON","stringify","value","relaySubmitButton","event","preventDefault","setAttribute","parse","Array","isArray","length","removeAttribute","alert","setRelays","error","toString","$c68123b027adfc04$export$26a1f54597e2915b"],"version":3,"file":"index.daa3caeb.js.map"}