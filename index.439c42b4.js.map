{"mappings":"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","sources":["src/startup.ts","src/router.ts"],"sourcesContent":["import * as L from \"leaflet\";\nimport { getRelays, setRelays } from \"./nostr\";\nimport {\n  createPrivateKey,\n  getNpubPublicKey,\n  getNsecPrivateKey,\n  getPublicKey,\n  hasPrivateKey,\n  setPrivateKey,\n} from \"./nostr/keys\";\nimport { subscribeAndGetProfile, setProfile } from \"./nostr/profiles\";\nimport { getTrustrootsUsernameFromLocation } from \"./router\";\n\nexport const startup = async () => {\n  const isLoggedIn = await hasPrivateKey();\n\n  const loggedIn = L.DomUtil.get(\"loggedIn\")!;\n  const loggedOut = L.DomUtil.get(\"loggedOut\")!;\n\n  if (isLoggedIn) {\n    L.DomUtil.addClass(loggedIn, \"show\");\n    L.DomUtil.addClass(loggedOut, \"hide\");\n\n    const publicKey = await getPublicKey();\n    const npubPublicKey = await getNpubPublicKey();\n    const nsecPrivateKey = await getNsecPrivateKey();\n\n    const publicKeyCode = globalThis.document.getElementById(\"npubPublicKey\")!;\n    publicKeyCode.innerText = npubPublicKey;\n    const nsecPrivateKeyCode =\n      globalThis.document.getElementById(\"nsecPrivateKey\")!;\n    nsecPrivateKeyCode.innerText = nsecPrivateKey;\n\n    const profileNameInput = document.getElementById(\n      \"profile_name\"\n    ) as HTMLInputElement;\n    const profileAboutInput = document.getElementById(\n      \"profile_about\"\n    ) as HTMLInputElement;\n    const profile = await subscribeAndGetProfile({ publicKey });\n    profileNameInput.value = profile.name;\n    profileAboutInput.value = profile.about;\n\n    const profileSubmitButton = document.getElementById(\"profile_submit\")!;\n    profileSubmitButton.onclick = async (event) => {\n      event.preventDefault();\n      profileSubmitButton.setAttribute(\"disabled\", \"disabled\");\n\n      const name = profileNameInput.value;\n      const about = profileAboutInput.value;\n      const trustrootsUsername = getTrustrootsUsernameFromLocation();\n\n      try {\n        await setProfile({ name, about, trustrootsUsername });\n\n        globalThis.alert(\"Your profile was updated.\");\n        globalThis.document.location.reload();\n      } catch {\n        globalThis.alert(\"There was an error. Please try again.\");\n        profileSubmitButton.removeAttribute(\"disabled\");\n      }\n    };\n  } else {\n    L.DomUtil.addClass(loggedIn, \"hide\");\n    L.DomUtil.addClass(loggedOut, \"show\");\n\n    const signupSubmit = document.getElementById(\"signup_submit\")!;\n    signupSubmit.onclick = async (event) => {\n      event.preventDefault();\n      signupSubmit.setAttribute(\"disabled\", \"disabled\");\n      const name = (document.getElementById(\"signup_name\") as HTMLInputElement)\n        .value;\n      const about = (\n        document.getElementById(\"signup_about\") as HTMLInputElement\n      ).value;\n\n      try {\n        await createPrivateKey();\n        const trustrootsUsername = getTrustrootsUsernameFromLocation();\n        setProfile({ name, about, trustrootsUsername }).then(() => {\n          globalThis.alert(\"Your account was created.\");\n          globalThis.document.location.reload();\n        });\n      } catch {\n        signinSubmit.removeAttribute(\"disabled\");\n      }\n    };\n\n    const signinSubmit = document.getElementById(\"signin_submit\")!;\n    signinSubmit.onclick = async (event) => {\n      event.preventDefault();\n      signupSubmit.setAttribute(\"disabled\", \"disabled\");\n      const privateKey = (\n        document.getElementById(\"signin_privateKey\") as HTMLInputElement\n      ).value;\n\n      try {\n        setPrivateKey({ privateKey });\n        globalThis.alert(\"You were signed in successfully.\");\n        globalThis.document.location.reload();\n      } catch {\n        signinSubmit.removeAttribute(\"disabled\");\n      }\n    };\n  }\n\n  const relaysInput = document.getElementById(\"relays\") as HTMLInputElement;\n  const relays = await getRelays();\n  const relaysJson = JSON.stringify(relays);\n  relaysInput.value = relaysJson;\n\n  const relaySubmitButton = document.getElementById(\"relays_submit\")!;\n  relaySubmitButton.onclick = async (event) => {\n    event.preventDefault();\n    relaySubmitButton.setAttribute(\"disabled\", \"disabled\");\n\n    const relaysJson = relaysInput.value;\n    try {\n      const relays = JSON.parse(relaysJson) as string[];\n      if (!Array.isArray(relays) || relays.length === 0) {\n        relaySubmitButton.removeAttribute(\"disabled\");\n        globalThis.alert(\"Invalid relays submitted. Please try again.\");\n        return;\n      }\n      await setRelays({ relays });\n      globalThis.alert(\"Relays saved.\");\n      globalThis.document.location.reload();\n    } catch (error) {\n      relaySubmitButton.removeAttribute(\"disabled\");\n      globalThis.alert(`#vRuf1N Error saving relays\\n${error.toString()}`);\n    }\n  };\n};\nstartup();\n","import { nip19 } from \"nostr-tools\";\n\nexport const getTrustrootsUsernameFromLocation = ({\n  location = globalThis.document.location,\n}: {\n  location?: Location;\n} = {}): string => {\n  const { hash } = location;\n  const params = hash.split(\"=\"); // /#user={user}\n  if (typeof params[1] === \"string\") {\n    const username = params[1];\n    const sanitisedUsername = encodeURIComponent(username);\n    return sanitisedUsername;\n  }\n  return \"\";\n};\n"],"names":["$8JYDX","parcelRequire","$e817d3341cf3ea9c$export$246a669a046084a4","location","globalThis","document","hash","params","split","username","encodeURIComponent","async","isLoggedIn","$lsWS8","hasPrivateKey","loggedIn","DomUtil","get","loggedOut","addClass","publicKey","getPublicKey","npubPublicKey","getNpubPublicKey","nsecPrivateKey","getNsecPrivateKey","getElementById","innerText","profileNameInput","profileAboutInput","profile","$8JDfT","subscribeAndGetProfile","value","name","about","profileSubmitButton","onclick","event","preventDefault","setAttribute","trustrootsUsername","setProfile","alert","reload","removeAttribute","signupSubmit","createPrivateKey","then","signinSubmit","privateKey","setPrivateKey","relaysInput","relays","$F1Hgz","getRelays","relaysJson","JSON","stringify","relaySubmitButton","parse","Array","isArray","length","setRelays","error","toString","$c68123b027adfc04$export$26a1f54597e2915b"],"version":3,"file":"index.439c42b4.js.map"}